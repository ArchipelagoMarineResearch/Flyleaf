<UserControl x:Class="FlyleafLib.Controls.WPF.Settings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             
             xmlns:local="clr-namespace:FlyleafLib.Controls.WPF"
             xmlns:fl="clr-namespace:FlyleafLib;assembly=FlyleafLib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             mc:Ignorable="d">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainDictionary.xaml"/>
                
                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />
            
            <Style x:Key="mdTabControl" TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            </Style>

            <Style x:Key="SaveButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Content" Value="Save"/>
                <Setter Property="Command" Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
                <Setter Property="CommandParameter" Value="save"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Margin" Value="0 0 10 0"/>
                <Setter Property="Visibility" Value="Visible"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding UIConfigPath}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="ColorPickerButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Command" Value="{Binding OpenColorPicker}"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="15"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedTheme.Name}" Value="Custom">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ColorPickerTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <EventSetter Event="PreviewTextInput" Handler="ValidationHex"/>
                <Setter Property="Margin" Value="2 0 0 0"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="MaxLength" Value="6"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedTheme.Name}" Value="Custom">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NormalTabItemStyle" TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}">
                <Setter Property="Width" Value="auto" />
                <Setter Property="Height" Value="45" />
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Width" Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Margin" Value="4 0"/>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
            </Style>

            <Style x:Key="FLTextbox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Width" Value="70"/>
                <Setter Property="Tag" Value="_save"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Right"/>
            </Style>
            
            <Style x:Key="FLTextboxNP" TargetType="{x:Type TextBox}" BasedOn="{StaticResource FLTextbox}">
                <EventSetter Event="PreviewTextInput" Handler="ValidationNumericPositive"/>
            </Style>

            <Style x:Key="FLTextboxN" TargetType="{x:Type TextBox}" BasedOn="{StaticResource FLTextbox}">
                <EventSetter Event="PreviewTextInput" Handler="ValidationNumeric"/>
            </Style>
            
            <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="fl:HDRtoSDRMethod"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <!--Pop Up Dialog (ColorPicker)-->
        <materialDesign:DialogHost DialogTheme="Inherit" Identifier="ColorPickerDialog" x:Name="ColorPickerDialog" OverlayBackground="{x:Null}">
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Margin="10" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin ="0 0 10 0" Text="Current Color" VerticalAlignment="Center"/>
                        <Rectangle Margin ="0 0 10 0" Width="20" Height="20" Fill="{Binding SelectedColor, Converter={StaticResource ColorToBrush}}" VerticalAlignment="Center"/>
                        <TextBlock Text="#" VerticalAlignment="Center"/>
                        <TextBox Margin ="2 0 10 0" Width="50" MaxLength="6" PreviewTextInput="ValidationHex" VerticalAlignment="Center">
                            <TextBox.Text>
                                <Binding Path="SelectedColor" Converter="{StaticResource ColorToHex}" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:ColorHexRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Margin="20 0 10 0" Text="Common: " VerticalAlignment="Center"/>
                        <ComboBox x:Name="NamedColors" Margin="0 0 0 0" ItemsSource="{Binding NamedColors}" SelectionChanged="NamedColors_SelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Height="20" Width="20" Fill="{Binding Value, Converter={StaticResource ColorToBrush}}"/>
                                        <TextBlock Margin="5 0 0 0" Text="{Binding Key}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>

                    <materialDesign:ColorPicker x:Name="ColorPicker" Color="{Binding SelectedColor, Delay=15}" Width="400" Height="150" Margin ="0 20 0 0"/>

                    <StackPanel Margin="10" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Margin="0 0 20 0" Width="80" Content="OK" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                        <Button Width="80" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel"/>
                    </StackPanel>
                    
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>

            <dragablz:TabablzControl Width="525" Height="390" x:Name="tabRoot" FixedHeaderCount="10" Style="{StaticResource mdTabControl}" ItemContainerStyle="{StaticResource NormalTabItemStyle}">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    </Style>
                </TabControl.Resources>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="Audio" Margin="4 6 4 6" />
                            <TextBlock Text="Audio" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 8 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid Margin="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Enabled" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Column="1" Tag="_save" IsChecked="{Binding AudioConfig.Enabled, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"/>

                            <TextBlock Grid.Row="1" Text="Delay (ms)" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource FLTextboxN}" Text="{Binding AudioConfig.Delay, UpdateSourceTrigger=Explicit, Converter={StaticResource TicksToMilliSeconds}}"/>

                            <TextBlock Grid.Row="2" Text="Latency (ms)" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding AudioConfig.Latency, UpdateSourceTrigger=Explicit, Converter={StaticResource TicksToMilliSeconds}}"/>

                            <TextBlock Grid.Row="3" Text="Device" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" x:Name="cmbAudioDevice" Tag="_save" ItemsSource="{Binding AudioMaster.Devices}" SelectedItem="{Binding Player.AudioDevice, UpdateSourceTrigger=Explicit}" />
                        </Grid>
                        <StackPanel Margin="0, 0, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="CcOutline" Margin="4 6 4 6"/>
                            <TextBlock Text="Subtitles" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 8 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid Margin="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Enabled" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Column="1" Tag="_save" HorizontalAlignment="Left" IsChecked="{Binding SubtitlesConfig.Enabled, UpdateSourceTrigger=Explicit}" Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"/>

                            <TextBlock Grid.Row="1" Text="Use Online DBs" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Row="1" Grid.Column="1" Tag="_save" HorizontalAlignment="Left" IsChecked="{Binding SubtitlesConfig.UseOnlineDatabases, UpdateSourceTrigger=Explicit}" Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"/>

                            <TextBlock Grid.Row="2" Text="Delay (ms)" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource FLTextboxN}" Text="{Binding SubtitlesConfig.Delay, UpdateSourceTrigger=Explicit, Converter={StaticResource TicksToMilliSeconds}}"/>

                            <TextBlock Grid.Row="3" Text="Fonts" VerticalAlignment="Center"/>
                            <Button Margin=" 0 15 0 0" Grid.Row="3" Grid.Column="1" Height="auto" MaxHeight="100" Command="{Binding SetSubtitlesFont}">
                                <StackPanel Orientation="Horizontal" Margin="0 5 0 5">
                                    <Rectangle Margin=" 0 0 10 0" Width="18" Height="18" Fill="{Binding SubtitlesFontColor}"/>
                                    <TextBlock Text="{Binding SubtitlesFontDesc}" TextWrapping="Wrap" MaxWidth="200" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                        <StackPanel Margin="0, 0, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0 0 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="VideoOutline" Margin="4 6 4 6"/>
                            <TextBlock Text="Video" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 8 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid Margin="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Aspect Ratio" VerticalAlignment="Center"/>
                            <ComboBox x:Name="cmbAspectRatio" Tag="_save" Grid.Column="1" ItemsSource="{x:Static fl:AspectRatio.AspectRatios}" SelectedItem="{Binding VideoConfig.AspectRatio, UpdateSourceTrigger=Explicit}"/>

                            <TextBlock Margin="0 8 0 8" Grid.Row="1" Text="Custom Ratio" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style>
                                        <Setter Property="TextBlock.Visibility" Value="Collapsed"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=cmbAspectRatio, Path=Text}" Value="Custom">
                                                <Setter Property="TextBlock.Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding VideoConfig.CustomAspectRatio, UpdateSourceTrigger=Explicit, Converter={StaticResource StringToRational}}">
                                <TextBox.Resources>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource FLTextbox}">
                                        <Setter Property="TextBox.Visibility" Value="Collapsed"></Setter>
                                        <EventSetter Event="PreviewTextInput" Handler="ValidationRatio"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=cmbAspectRatio, Path=Text}" Value="Custom">
                                                <Setter Property="TextBox.Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>

                            <TextBlock Grid.Row="2" Text="V. Sync" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Row="2" Grid.Column="1" Tag="_save" IsChecked="{Binding VideoConfig.VSync, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"/>

                            <TextBlock Grid.Row="3" Text="Video Acceleration" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Row="3" Grid.Column="1" Tag="_save" IsChecked="{Binding VideoConfig.VideoAcceleration, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"/>

                            <TextBlock Grid.Row="4" Text="Decoder Threads" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding DecoderConfig.VideoThreads, UpdateSourceTrigger=Explicit}"/>

                            <TextBlock Grid.Row="5" Text="HDR to SDR Method" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="5" x:Name="cmbHDRtoSDRMethod" Grid.Column="1" ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding VideoConfig.HDRtoSDRMethod}"/>

                            <TextBlock Grid.Row="6" Text="HDR to SDR Tone" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="6" Grid.Column="1" Style="{StaticResource FLTextbox}" Text="{Binding VideoConfig.HDRtoSDRTone, UpdateSourceTrigger=LostFocus}"/>

                            <TextBlock Grid.Row="7" Text="Brightness" Margin="0,10,0,0"  VerticalAlignment="Center"/>
                            <Slider Grid.Row="7" Grid.Column="2" Margin="-78,10,0,0" Style="{StaticResource MaterialDesignDiscreteSlider}" Value="{Binding VideoConfig.Brightness, Mode=TwoWay}" Minimum="0" Maximum="100"/>

                            <TextBlock Grid.Row="8" Text="Contrast" Margin="0,10,0,0" VerticalAlignment="Center"/>
                            <Slider Grid.Row="8" Grid.Column="2" Margin="-78,10,0,0" Style="{StaticResource MaterialDesignDiscreteSlider}" HorizontalAlignment="Stretch" Value="{Binding VideoConfig.Contrast, Mode=TwoWay}" Minimum="0" Maximum="100"/>

                        </Grid>
                        <StackPanel Margin="0, 0, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="ProgressDownload" Margin="4 6 4 6"/>
                            <TextBlock Text="Buffering" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 8 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid Margin="20" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="Buffer Duration Min.  (ms)" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding PlayerConfig.MinBufferDuration, UpdateSourceTrigger=Explicit, Converter={StaticResource TicksToMilliSeconds}}"/>

                            <TextBlock Grid.Row="1" Text="Buffer Duration Max. (ms)" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding DemuxerConfig.BufferDuration, UpdateSourceTrigger=Explicit, Converter={StaticResource TicksToMilliSeconds}}"/>

                            <TextBlock Grid.Row="2" Text="Audio Frames Max." VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding DecoderConfig.MaxAudioFrames, UpdateSourceTrigger=Explicit}"/>

                            <TextBlock Grid.Row="3" Text="Video Frames Max." VerticalAlignment="Center"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding DecoderConfig.MaxVideoFrames, UpdateSourceTrigger=Explicit}"/>

                            <TextBlock Grid.Row="4" Text="Reverse Frames Max." VerticalAlignment="Center"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Style="{StaticResource FLTextboxNP}" Text="{Binding DecoderConfig.MaxVideoFramesReverse, UpdateSourceTrigger=Explicit}"/>
                        </Grid>
                        <StackPanel Margin="0, 0, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="PaletteOutline" Margin="4 6 4 6"/>
                            <TextBlock Text="Themes" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 4 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <StackPanel Orientation="Vertical" Margin="20 20 20 45">

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Theme" VerticalAlignment="Center"/>
                                <ComboBox x:Name="cmbThemes" Margin="30 0 0 0" ItemsSource="{Binding UIThemes}" SelectedItem="{Binding SelectedTheme}" DisplayMemberPath="Name"/>
                            </StackPanel>

                            <Separator Margin="0 20 0 20"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Foreground (Primary)" VerticalAlignment="Center"/>
                                <Border Grid.Column="1" Background="{Binding SelectedItem.PrimaryColor, ElementName=cmbThemes, Converter={StaticResource ColorToBrush}}" BorderBrush="{DynamicResource MaterialDesignBody}" Width="20" Height="20" BorderThickness="1"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <TextBlock Text="#" VerticalAlignment="Center"/>
                                    <TextBox Style="{StaticResource ColorPickerTextBox}">
                                        <TextBox.Text>
                                            <Binding Path="SelectedItem.PrimaryColor" ElementName="cmbThemes" Converter="{StaticResource ColorToHex}" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:ColorHexRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <Button Grid.Column="3" Content="Change" Style="{StaticResource ColorPickerButton}" CommandParameter="Primary"/>

                                <TextBlock Grid.Row="1" Text="Foreground (Secondary)" VerticalAlignment="Center"/>
                                <Border Grid.Row="1" Grid.Column="1" Background="{Binding SelectedItem.SecondaryColor, ElementName=cmbThemes, Converter={StaticResource ColorToBrush}}" BorderBrush="{DynamicResource MaterialDesignBody}" Width="20" Height="20" BorderThickness="1"/>
                                <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal">
                                    <TextBlock Text="#" VerticalAlignment="Center"/>
                                    <TextBox Style="{StaticResource ColorPickerTextBox}">
                                        <TextBox.Text>
                                            <Binding Path="SelectedItem.SecondaryColor" ElementName="cmbThemes" Converter="{StaticResource ColorToHex}" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:ColorHexRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <Button Grid.Row="1" Grid.Column="3" Content="Change" Style="{StaticResource ColorPickerButton}" CommandParameter="Secondary"/>

                                <TextBlock Grid.Row="2" Text="Background (Paper)" VerticalAlignment="Center"/>
                                <Border Grid.Row="2" Grid.Column="1" Background="{Binding SelectedItem.PaperColor, ElementName=cmbThemes, Converter={StaticResource ColorToBrush}}" BorderBrush="{DynamicResource MaterialDesignBody}" Width="20" Height="20" BorderThickness="1"/>
                                <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal">
                                    <TextBlock Text="#" VerticalAlignment="Center"/>
                                    <TextBox Style="{StaticResource ColorPickerTextBox}">
                                        <TextBox.Text>
                                            <Binding Path="SelectedItem.PaperColor" ElementName="cmbThemes" Converter="{StaticResource ColorToHex}" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:ColorHexRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <Button Grid.Row="2" Grid.Column="3" Content="Change" Style="{StaticResource ColorPickerButton}" CommandParameter="Paper"/>

                                <TextBlock Grid.Row="3" Text="Background (Video)" VerticalAlignment="Center"/>
                                <Border Grid.Row="3" Grid.Column="1" Background="{Binding SelectedItem.VideoView, ElementName=cmbThemes, Converter={StaticResource ColorToBrush}}" BorderBrush="{DynamicResource MaterialDesignBody}" Width="20" Height="20" BorderThickness="1"/>
                                <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal">
                                    <TextBlock Text="#" VerticalAlignment="Center"/>
                                    <TextBox Style="{StaticResource ColorPickerTextBox}">
                                        <TextBox.Text>
                                            <Binding Path="SelectedItem.VideoView" ElementName="cmbThemes" Converter="{StaticResource ColorToHex}" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <local:ColorHexRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <Button Grid.Row="3" Grid.Column="3" Content="Change" Style="{StaticResource ColorPickerButton}" CommandParameter="VideoView"/>
                            </Grid>
                        </StackPanel>

                        <StackPanel Margin="0, 0, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}">
                            <materialDesign:PackIcon Kind="PluginOutline" Margin="4 6 4 6"/>
                            <TextBlock Text="Plugins" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0 0 4 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Margin="20, 20, 0, 10" Orientation="Horizontal">
                                <TextBlock Text="Plugin" VerticalAlignment="Center" Width="150"/>
                                <ComboBox x:Name="cmbPlugins" ItemsSource="{Binding PluginsConfig.Keys}" SelectedIndex="0"/>
                            </StackPanel>

                            <Separator/>
                            <ItemsControl x:Name="curPluginConfig" Margin="20,0,0,0" Height="230">
                                <ItemsControl.ItemsSource>
                                    <MultiBinding Converter="{StaticResource GetDictionaryItem}" UpdateSourceTrigger="LostFocus">
                                        <Binding Path="PluginsConfig" />
                                        <Binding Path="Text" ElementName="cmbPlugins" />
                                    </MultiBinding>
                                </ItemsControl.ItemsSource>
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <ScrollViewer>
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Key, Mode=OneWay}" VerticalAlignment="Center" Width="150"/>
                                            <TextBox Text="{Binding Value, Mode=OneWay}" VerticalAlignment="Center" Width="320" LostFocus="PluginValueChanged"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <StackPanel Margin="0, 10, 0, 10" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Style="{StaticResource SaveButton}"/>
                            <Button Content="Apply" FontWeight="ExtraBold" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="apply"/>
                            <Button Margin="10 0" Content="Cancel" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="cancel" />
                        </StackPanel>
                    </Grid>
                </TabItem>
            </dragablz:TabablzControl>
        </materialDesign:DialogHost>
    </Grid>
</UserControl>
